geom_smooth(span = 0.6, se = F, method = "loess")+
scale_color_manual(values = c("hotpink3", "cadetblue3"))+
scale_fill_manual(values = c("hotpink3", "cadetblue3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "top",
axis.title.x = element_blank(),
axis.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = expression(pi), color = "Population", fill = "Population")
pi_plot
pi_plot <- all_subsample_df_summarized %>%
dplyr::select(CHROM, position, Diversity_a, Diversity_b) %>%
tidyr::gather(Pi, value, -CHROM, -position) %>%
ggplot() +
aes(x = position/1e6, y = value,
color = factor(Pi, levels = c("Diversity_b", "Diversity_a"), labels = c("World", "Hawaii")),
fill = factor(Pi, levels = c("Diversity_b", "Diversity_a"), labels = c("World", "Hawaii")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
facet_grid(.~CHROM, scales = "free")+
geom_smooth(span = 0.3, se = F, method = "loess")+
scale_color_manual(values = c("hotpink3", "cadetblue3"))+
scale_fill_manual(values = c("hotpink3", "cadetblue3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "top",
axis.title.x = element_blank(),
axis.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = expression(pi), color = "Population", fill = "Population")
pi_plot
pi_plot <- all_subsample_df_summarized %>%
dplyr::select(CHROM, position, Diversity_a, Diversity_b) %>%
tidyr::gather(Pi, value, -CHROM, -position) %>%
ggplot() +
aes(x = position/1e6, y = value,
color = factor(Pi, levels = c("Diversity_b", "Diversity_a"), labels = c("World", "Hawaii")),
fill = factor(Pi, levels = c("Diversity_b", "Diversity_a"), labels = c("World", "Hawaii")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
facet_grid(.~CHROM, scales = "free")+
geom_smooth(span = 0.4, se = F, method = "loess")+
scale_color_manual(values = c("hotpink3", "cadetblue3"))+
scale_fill_manual(values = c("hotpink3", "cadetblue3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "top",
axis.title.x = element_blank(),
axis.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = expression(pi), color = "Population", fill = "Population")
pi_plot
for(chrom in 1:length(grep(pattern = "Neutr", list.files("data/popgenome/"), value = T))){
fch <- strsplit(grep(pattern = "Neutr", list.files("data/popgenome/"), value = T)[chrom], split = "_")[[1]][1]
if(chrom == 1){
load(grep(pattern = "Neutr", list.files("data/popgenome/", full.names = T), value = T)[chrom])
td_df <- neutrality_df %>%
dplyr::mutate(CHROM = fch)
} else {
load(grep(pattern = "Neutr", list.files("data/popgenome/", full.names = T), value = T)[chrom])
td_df <- neutrality_df %>%
dplyr::mutate(CHROM = fch) %>%
dplyr::bind_rows(., td_df)
}
}
td_plot <- td_df %>%
na.omit() %>%
dplyr::distinct(WindowPosition, Population, value, .keep_all = T) %>%
dplyr::select(CHROM, position = WindowPosition, Population, statistic, value) %>%
dplyr::filter(statistic == "Tajima.D") %>%
ggplot() +
aes(x = position/1e6, y = value,
color = factor(Population, levels = c("A", "B"), labels = c("Hawaii", "World")),
fill = factor(Population, levels = c("A", "B"), labels = c("Hawaii", "World")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
geom_smooth(span = 0.4, se = F, method = "loess")+
facet_grid(.~CHROM, scales = "free")+
scale_color_manual(values = c( "cadetblue3","hotpink3"))+
scale_fill_manual(values = c( "cadetblue3","hotpink3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = "Tajima's D", color = "Population", fill = "Population")
td_df_stat <- td_df %>%
na.omit() %>%
dplyr::distinct(WindowPosition, Population, value, .keep_all = T) %>%
dplyr::select(CHROM, position = WindowPosition, Population, statistic, value) %>%
dplyr::filter(statistic == "Tajima.D")
td_plot <-   ggplot() +
aes(x = position/1e6, y = value,
color = factor(Population, levels = c("A", "B"), labels = c("Hawaii", "World")),
fill = factor(Population, levels = c("A", "B"), labels = c("Hawaii", "World")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
geom_smooth(span = 0.4, se = F, method = "loess")+
facet_grid(.~CHROM, scales = "free")+
scale_color_manual(values = c( "cadetblue3","hotpink3"))+
scale_fill_manual(values = c( "cadetblue3","hotpink3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = "Tajima's D", color = "Population", fill = "Population")
td_plot
View(td_df_stat)
View(td_df_stat)
td_plot <-   ggplot(td_df_stat) +
aes(x = position/1e6, y = value,
color = factor(Population, levels = c("A", "B"), labels = c("Hawaii", "World")),
fill = factor(Population, levels = c("A", "B"), labels = c("Hawaii", "World")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
geom_smooth(span = 0.4, se = F, method = "loess")+
facet_grid(.~CHROM, scales = "free")+
scale_color_manual(values = c( "cadetblue3","hotpink3"))+
scale_fill_manual(values = c( "cadetblue3","hotpink3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = "Tajima's D", color = "Population", fill = "Population")
View(td_df_stat)
td_plot <-   ggplot(td_df_stat) +
aes(x = position/1e6, y = value,
color = factor(Population, levels = c("Hawaii", "World")),
fill = factor(Population, levels = c("Hawaii", "World")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
geom_smooth(span = 0.4, se = F, method = "loess")+
facet_grid(.~CHROM, scales = "free")+
scale_color_manual(values = c( "cadetblue3","hotpink3"))+
scale_fill_manual(values = c( "cadetblue3","hotpink3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = "Tajima's D", color = "Population", fill = "Population")
td_plot
td_plot <-   ggplot(td_df_stat) +
aes(x = position/1e6, y = value,
color = factor(Population, levels = c("Hawaii", "World")),
fill = factor(Population, levels = c("Hawaii", "World")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
geom_smooth(span = 0.3, se = F, method = "loess")+
facet_grid(.~CHROM, scales = "free")+
scale_color_manual(values = c( "cadetblue3","hotpink3"))+
scale_fill_manual(values = c( "cadetblue3","hotpink3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = "Tajima's D", color = "Population", fill = "Population")
td_plot
td_plot <-   ggplot(td_df_stat) +
aes(x = position/1e6, y = value,
color = factor(Population, levels = c("Hawaii", "World")),
fill = factor(Population, levels = c("Hawaii", "World")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
geom_smooth(span = 0.45, se = F, method = "loess")+
facet_grid(.~CHROM, scales = "free")+
scale_color_manual(values = c( "cadetblue3","hotpink3"))+
scale_fill_manual(values = c( "cadetblue3","hotpink3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "none",
axis.title.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = "Tajima's D", color = "Population", fill = "Population")
td_plot
final_plot <- cowplot::plot_grid(pi_plot,
td_plot,
fst_plot,
ncol = 1,
align = "vh", labels = c("A","B","C"),
rel_heights = c(1, 0.8, 0.9),
axis = "b")
View(all_subsample_df_summarized)
final_plot
ggsave(final_plot, filename = "Plots/Figure4.pdf", height = 8, width = 12, useDingbats = F)
averages_df <- all_subsample_df_summarized %>%
dplyr::mutate(genome_avg_pi_word = mean(Diversity_b),
genome_avg_pi_hi = mean(Diversity_a),
genome_avg_FST = mean(Fst)) %>%
dplyr::distinct(genome_avg_pi_word, genome_avg_pi_hi, genome_avg_FST) %>%
dplyr::mutate(fold_pi = genome_avg_pi_hi/genome_avg_pi_word)
View(averages_df)
averages_df
ggsave(final_plot, filename = "Plots/Figure4.pdf", height = 10, width = 12, useDingbats = F)
readr::write_csv(all_subsample_df_summarized, "data/elife_files/fig4-data1-test.csv")
td_df_save <- td_df %>%
na.omit() %>%
dplyr::distinct(WindowPosition, Population, value, .keep_all = T) %>%
dplyr::select(CHROM, position = WindowPosition, Population, statistic, value) %>%
dplyr::filter(statistic == "Tajima.D")
td_df_save <- td_df %>%
na.omit() %>%
dplyr::distinct(WindowPosition, Population, value, .keep_all = T) %>%
dplyr::select(CHROM, position = WindowPosition, Population, statistic, value) %>%
dplyr::filter(statistic == "Tajima.D")
View(td_df_save)
readr::write_csv(td_df_save, "data/elife_files/fig4-data2.csv")
View(averages_df)
library(pophelper)
library(tidyverse)
library(ggthemes)
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
VCF_PATH="data/ANNOTATE_VCF/LD_0.8.vcf.gz"
strain_islands <- c("XZ1514" = "#E69F00", "XZ1516" = "#E69F00","XZ1513" = "#E69F00","ECA372" = "#E69F00","ECA701" = "#E69F00","XZ1515" = "#E69F00",
"CB4856" = "#56B4E9",
"ECA369" = "#009E73","ECA738" = "#009E73",
"QX1792" = "#0072B2", "QX1794" = "#0072B2", "QX1793" = "#0072B2", "QX1791" = "#0072B2", "ECA740" = "#0072B2", "ECA741" = "#0072B2", "ECA363" = "#0072B2", "ECA743" = "#0072B2", "ECA742" = "#0072B2",
"ECA760" = "#CC79A7","ECA768" = "#CC79A7","ECA777" = "#CC79A7","ECA706" = "#CC79A7","ECA705" = "#CC79A7","ECA703" = "#CC79A7","ECA807" = "#CC79A7","ECA778" = "#CC79A7",
"ECA812" = "#CC79A7","ECA710" = "#CC79A7","ECA744" = "#CC79A7","ECA745" = "#CC79A7","ECA732" = "#CC79A7","ECA733" = "#CC79A7","ECA746" = "#CC79A7","DL238" = "#CC79A7",
"ECA347" = "#CC79A7","ECA730" = "#CC79A7","ECA724" = "#CC79A7","ECA722" = "#CC79A7","ECA189" = "#CC79A7","ECA191" = "#CC79A7","ECA723" = "#CC79A7","ECA712" = "#CC79A7",
"ECA396" = "#CC79A7")
ancestry.colours <- c("A"="gold2", "B"="plum4","C"= "darkorange1",
"D"="lightskyblue2", "E"="firebrick","F"= "burlywood3", "G"="gray51",
"H"="springgreen4", "I"="lightpink2", "J"="deepskyblue4", "WHOLE_POPULATION"="black",
"K"="mediumpurple4","L"= "orange","M"= "maroon","N"= "yellow3","O"= "brown4",
"P"="yellow4", "Q"="sienna4", "R"="chocolate", "S"="gray19")
ancestry.colours.pie <- c("perc_a"="gold2", "perc_b"="plum4","perc_c"= "darkorange1",
"perc_d"="lightskyblue2", "perc_e"="firebrick","perc_f"= "burlywood3",
"perc_g"="gray51",
"perc_h" = "springgreen4",
"perc_i" = "lightpink2",
"perc_j" = "deepskyblue4",
"perc_k" = "mediumpurple4",
"perc_l" = "orange")
sample_names <- sort(data.table::fread("data/ANNOTATE_VCF/samples_HI_ONLY.txt", header = F) %>% dplyr::pull(V1))
sample_names <- sort(data.table::fread("data/ANNOTATE_VCF/samples_HI_ONLY.txt", header = F) %>% dplyr::pull(V1))
k_summary <- data.table::fread("data/ADMIXTURE/Hawaii/CV_Summary/admix_replicates_CV.tsv",header = T)
ksum_plot <- ggplot(k_summary)+
aes(x = factor(K), y = CV)+
geom_boxplot(outlier.colour = NA)+
geom_jitter(width = .1)+
theme_bw()+
labs(x = "K")
sample_names <- sort(data.table::fread("data/ANNOTATE_VCF/samples_HI_ONLY.txt", header = F) %>% dplyr::pull(V1))
k_summary <- data.table::fread("data/ADMIXTURE/Hawaii/CV_Summary/admix_replicates_CV.tsv",header = T)
ksum_plot <- ggplot(k_summary)+
aes(x = factor(K), y = CV)+
geom_boxplot(outlier.colour = NA)+
geom_jitter(width = .1)+
theme_bw()+
labs(x = "K")
admix_plots <- list()
for(kpops in 1:length(grep(".Q", list.files("data/ADMIXTURE/Hawaii/BEST_K/"), value = T))){
K <- as.numeric(strsplit(grep(".Q", list.files("data/ADMIXTURE/Hawaii/BEST_K/"), value = T)[kpops], split = "\\.")[[1]][4])
# load Q files
qfile_name <- grep(pattern = glue::glue("{K}\\.Q$"), value = T, x = list.files("data/ADMIXTURE/Hawaii/BEST_K/"))
qfile <- pophelper::readQ(files = paste0("data/ADMIXTURE/Hawaii/BEST_K/",qfile_name))[[1]]
# add pop names
colnames(qfile) <- LETTERS[1:K]
qfile <- qfile %>%
dplyr::mutate(samples = sample_names)
write.table(qfile, file = glue::glue("data/ADMIXTURE/Hawaii/BEST_K/K{K}_Processed_Ancestry.tsv"), col.names = T, row.names = F, quote = F, sep = "\t")
# make long and determin order of plotting
long_admix_pops <- qfile %>%
dplyr::mutate(samples = sample_names) %>%
tidyr::gather(cluster, frac_cluster, -samples) %>%
dplyr::group_by(samples) %>%
dplyr::mutate(max_frac = max(frac_cluster)) %>%
dplyr::ungroup() %>%
dplyr::arrange(cluster, max_frac) %>%
dplyr::mutate(samples = factor(samples, levels = unique(samples)))
# establish plot order of strains based on anc pop and max fraction
plot_order <- long_admix_pops %>%
dplyr::filter(frac_cluster == max_frac) %>%
dplyr::arrange(cluster, -max_frac) %>%
dplyr::mutate(samples = factor(samples, levels = unique(samples)))
admix_plots[[kpops]] <- long_admix_pops %>%
dplyr::mutate(ordered_samples = factor(samples, levels = plot_order$samples)) %>%
ggplot() +
geom_bar(stat = "identity",
aes(x = ordered_samples,
y = frac_cluster,
fill = cluster)) +
scale_fill_manual(values = ancestry.colours) +
labs(fill = "", x = "", y =  glue::glue("K = {K}")) +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.title.y = element_text(angle = 90, vjust = .5),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
plot.margin = unit(c(0,0,0,0), units = "cm"))
ggsave(admix_plots[[kpops]]  +
theme(axis.text.x=element_text(angle = 90)), filename = glue::glue("plots/{K}_Hawaii_names.pdf"), height = 4, width = 28)
ggsave(admix_plots[[kpops]]  +
theme(axis.text.x=element_text(angle = 90)), filename = glue::glue("plots/{K}_Hawaii_names.pdf"), height = 4, width = 28,dpi=300)
}
admixture_plots <- cowplot::plot_grid(admix_plots[[1]],
admix_plots[[2]],
admix_plots[[3]],
ncol = 1)
ksummary_plot <- cowplot::plot_grid(ksum_plot,
admixture_plots,
ncol = 2,
labels = c("A", "B"),
rel_widths = c(0.5, 1))
admix_legend <- cowplot::plot_grid(cowplot::get_legend(admix_plots[[3]]))
admixture_plots
ksummary_plot
strain_vector <- paste(sort(names(strain_islands)), sep = ",", collapse = ",")
system(glue::glue("bcftools view -s {strain_vector} {VCF_PATH} -Oz -o data/ANNOTATE_VCF/Hawaii.vcf.gz"))
system(glue::glue("python scripts/vcf2phylip.py -i data/ANNOTATE_VCF/Hawaii.vcf.gz -m 43 --fasta --nexus --nexus-binary"))
admix_plots[[1]]
test <- admix_plots[[1]]
test[1]
test <- admix_plots[[1[1]]]
test <- admix_plots[[1]]
k3 <- admix_plots[[1]]
k3df <- k3[1]
k4 <- admix_plots[[1]]
k4df <- k3[1]
k5 <- admix_plots[[1]]
k5df <- k3[1]
k3df <- as.data.frame(k3[1])
View(k3df)
k3df <- as.data.frame(k3[1]) %>%
dplyr::rename(isotypes = data.samples, cluster = data.cluster, frac_cluster = data.frac_cluster, max_frac = data.max_frac) %>%
dplyr::select(-data.ordered_samples)
View(k3df)
k4df <- as.data.frame(k4[1]) %>%
dplyr::rename(isotypes = data.samples, cluster = data.cluster, frac_cluster = data.frac_cluster, max_frac = data.max_frac) %>%
dplyr::select(-data.ordered_samples) %>%
dplyr::mutate(K = 4)
View(k4df)
View(k3df)
View(k4df)
k3df <- as.data.frame(k3[1]) %>%
dplyr::rename(isotypes = data.samples, cluster = data.cluster, frac_cluster = data.frac_cluster, max_frac = data.max_frac) %>%
dplyr::select(-data.ordered_samples) %>%
dplyr::mutate(K = 3)
k4 <- admix_plots[[1]]
k4df <- as.data.frame(k4[1]) %>%
dplyr::rename(isotypes = data.samples, cluster = data.cluster, frac_cluster = data.frac_cluster, max_frac = data.max_frac) %>%
dplyr::select(-data.ordered_samples) %>%
dplyr::mutate(K = 4)
k5 <- admix_plots[[1]]
k5df <- as.data.frame(k5[1]) %>%
dplyr::rename(isotypes = data.samples, cluster = data.cluster, frac_cluster = data.frac_cluster, max_frac = data.max_frac) %>%
dplyr::select(-data.ordered_samples) %>%
dplyr::mutate(K = 5)
supp_fig11_data1 <- rbind(k3df, k4df, k5df)
View(supp_fig11_data1)
rbind(k3df, k4df, k5df) %>%
readr::write_csv('data/elife_files/supp-fig11-data1.csv')
df <- data.table::fread("data/original_WI_strain_list_remove_when_cleaning.csv")
test <- k_summary
View(test)
k_summary %>%
readr::write_csv('data/elife_files/supp-fig11-data2.csv')
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
VCF_PATH="data/ANNOTATE_VCF/LD_0.8.vcf.gz"
k_summary %>%
readr::write_csv('data/elife_files/supp-fig11-data1.csv')
library(pophelper)
library(tidyverse)
library(ggthemes)
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
VCF_PATH="data/ANNOTATE_VCF/LD_0.8.vcf.gz"
strain_islands <- c("XZ1514" = "#E69F00", "XZ1516" = "#E69F00","XZ1513" = "#E69F00","ECA372" = "#E69F00","ECA701" = "#E69F00","XZ1515" = "#E69F00",
"CB4856" = "#56B4E9",
"ECA369" = "#009E73","ECA738" = "#009E73",
"QX1792" = "#0072B2", "QX1794" = "#0072B2", "QX1793" = "#0072B2", "QX1791" = "#0072B2", "ECA740" = "#0072B2", "ECA741" = "#0072B2", "ECA363" = "#0072B2", "ECA743" = "#0072B2", "ECA742" = "#0072B2",
"ECA760" = "#CC79A7","ECA768" = "#CC79A7","ECA777" = "#CC79A7","ECA706" = "#CC79A7","ECA705" = "#CC79A7","ECA703" = "#CC79A7","ECA807" = "#CC79A7","ECA778" = "#CC79A7",
"ECA812" = "#CC79A7","ECA710" = "#CC79A7","ECA744" = "#CC79A7","ECA745" = "#CC79A7","ECA732" = "#CC79A7","ECA733" = "#CC79A7","ECA746" = "#CC79A7","DL238" = "#CC79A7",
"ECA347" = "#CC79A7","ECA730" = "#CC79A7","ECA724" = "#CC79A7","ECA722" = "#CC79A7","ECA189" = "#CC79A7","ECA191" = "#CC79A7","ECA723" = "#CC79A7","ECA712" = "#CC79A7",
"ECA396" = "#CC79A7")
ancestry.colours <- c("A"="gold2", "B"="plum4","C"= "darkorange1",
"D"="lightskyblue2", "E"="firebrick","F"= "burlywood3", "G"="gray51",
"H"="springgreen4", "I"="lightpink2", "J"="deepskyblue4", "WHOLE_POPULATION"="black",
"K"="mediumpurple4","L"= "orange","M"= "maroon","N"= "yellow3","O"= "brown4",
"P"="yellow4", "Q"="sienna4", "R"="chocolate", "S"="gray19")
ancestry.colours.pie <- c("perc_a"="gold2", "perc_b"="plum4","perc_c"= "darkorange1",
"perc_d"="lightskyblue2", "perc_e"="firebrick","perc_f"= "burlywood3",
"perc_g"="gray51",
"perc_h" = "springgreen4",
"perc_i" = "lightpink2",
"perc_j" = "deepskyblue4",
"perc_k" = "mediumpurple4",
"perc_l" = "orange")
sample_names <- sort(data.table::fread("data/ANNOTATE_VCF/samples_HI_ONLY.txt", header = F) %>% dplyr::pull(V1))
k_summary <- data.table::fread("data/ADMIXTURE/Hawaii/CV_Summary/admix_replicates_CV.tsv",header = T)
ksum_plot <- ggplot(k_summary)+
aes(x = factor(K), y = CV)+
geom_boxplot(outlier.colour = NA)+
geom_jitter(width = .1)+
theme_bw()+
labs(x = "K")
admix_plots <- list()
for(kpops in 1:length(grep(".Q", list.files("data/ADMIXTURE/Hawaii/BEST_K/"), value = T))){
K <- as.numeric(strsplit(grep(".Q", list.files("data/ADMIXTURE/Hawaii/BEST_K/"), value = T)[kpops], split = "\\.")[[1]][4])
# load Q files
qfile_name <- grep(pattern = glue::glue("{K}\\.Q$"), value = T, x = list.files("data/ADMIXTURE/Hawaii/BEST_K/"))
qfile <- pophelper::readQ(files = paste0("data/ADMIXTURE/Hawaii/BEST_K/",qfile_name))[[1]]
# add pop names
colnames(qfile) <- LETTERS[1:K]
qfile <- qfile %>%
dplyr::mutate(samples = sample_names)
write.table(qfile, file = glue::glue("data/ADMIXTURE/Hawaii/BEST_K/K{K}_Processed_Ancestry.tsv"), col.names = T, row.names = F, quote = F, sep = "\t")
# make long and determin order of plotting
long_admix_pops <- qfile %>%
dplyr::mutate(samples = sample_names) %>%
tidyr::gather(cluster, frac_cluster, -samples) %>%
dplyr::group_by(samples) %>%
dplyr::mutate(max_frac = max(frac_cluster)) %>%
dplyr::ungroup() %>%
dplyr::arrange(cluster, max_frac) %>%
dplyr::mutate(samples = factor(samples, levels = unique(samples)))
# establish plot order of strains based on anc pop and max fraction
plot_order <- long_admix_pops %>%
dplyr::filter(frac_cluster == max_frac) %>%
dplyr::arrange(cluster, -max_frac) %>%
dplyr::mutate(samples = factor(samples, levels = unique(samples)))
admix_plots[[kpops]] <- long_admix_pops %>%
dplyr::mutate(ordered_samples = factor(samples, levels = plot_order$samples)) %>%
ggplot() +
geom_bar(stat = "identity",
aes(x = ordered_samples,
y = frac_cluster,
fill = cluster)) +
scale_fill_manual(values = ancestry.colours) +
labs(fill = "", x = "", y =  glue::glue("K = {K}")) +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.title.y = element_text(angle = 90, vjust = .5),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
plot.margin = unit(c(0,0,0,0), units = "cm"))
ggsave(admix_plots[[kpops]]  +
theme(axis.text.x=element_text(angle = 90)), filename = glue::glue("plots/{K}_Hawaii_names.pdf"), height = 4, width = 28)
ggsave(admix_plots[[kpops]]  +
theme(axis.text.x=element_text(angle = 90)), filename = glue::glue("plots/{K}_Hawaii_names.pdf"), height = 4, width = 28,dpi=300)
}
admixture_plots <- cowplot::plot_grid(admix_plots[[1]],
admix_plots[[2]],
admix_plots[[3]],
ncol = 1)
ksummary_plot <- cowplot::plot_grid(ksum_plot,
admixture_plots,
ncol = 2,
labels = c("A", "B"),
rel_widths = c(0.5, 1))
admix_legend <- cowplot::plot_grid(cowplot::get_legend(admix_plots[[3]]))
ggsave(ksummary_plot, filename = "plots/Supplmental Figure 11.pdf", height = 2, width = 7.5, useDingbats = F)
strain_vector <- paste(sort(names(strain_islands)), sep = ",", collapse = ",")
system(glue::glue("bcftools view -s {strain_vector} {VCF_PATH} -Oz -o data/ANNOTATE_VCF/Hawaii.vcf.gz"))
system(glue::glue("python scripts/vcf2phylip.py -i data/ANNOTATE_VCF/Hawaii.vcf.gz -m 43 --fasta --nexus --nexus-binary"))
k3 <- admix_plots[[1]]
k3df <- as.data.frame(k3[1]) %>%
dplyr::rename(isotypes = data.samples, cluster = data.cluster, frac_cluster = data.frac_cluster, max_frac = data.max_frac) %>%
dplyr::select(-data.ordered_samples) %>%
dplyr::mutate(K = 3)
k4 <- admix_plots[[1]]
k4df <- as.data.frame(k4[1]) %>%
dplyr::rename(isotypes = data.samples, cluster = data.cluster, frac_cluster = data.frac_cluster, max_frac = data.max_frac) %>%
dplyr::select(-data.ordered_samples) %>%
dplyr::mutate(K = 4)
k5 <- admix_plots[[1]]
k5df <- as.data.frame(k5[1]) %>%
dplyr::rename(isotypes = data.samples, cluster = data.cluster, frac_cluster = data.frac_cluster, max_frac = data.max_frac) %>%
dplyr::select(-data.ordered_samples) %>%
dplyr::mutate(K = 5)
rbind(k3df, k4df, k5df) %>%
readr::write_csv('data/elife_files/supp-fig11-data1.csv')
k_summary %>%
readr::write_csv('data/elife_files/supp-fig11-data2.csv')
