by = "c_label"
)
blast_results <- readr::read_tsv("data/sanger/blast_results.tsv") %>%
dplyr::group_by(s_plate) %>%
dplyr::filter(row_number() == 1)
cso <- cso %>% dplyr::left_join(blast_results, by = c("s_label" = "s_plate")) %>%
dplyr::left_join(
googlesheets::gs_key("1bavR10CEyvWt2zBSNBz-ADXx06b1mDFmuvaaM8Uobi4") %>%
googlesheets::gs_read("Full", na = c("#N/A", "NA", ""),
by = c("c_label", "s_label"))
) %>%
dplyr::mutate_at(vars("pcr_rhpositive"), funs(as.numeric))
df[df$c_label == "C-3295", c("longitude", "latitude", "record_longitude", "record_latitude", "date", "datetime")] <- NA
cso <- cso %>% dplyr::bind_rows(df[colnames(df) %in% colnames(cso)] %>%
dplyr::filter(!(c_label %in% cso$c_label)))  %>%
dplyr::arrange(c_label, s_label) %>%
dplyr::mutate(spp_id = ifelse(
(pcr_rhpositive == 0) |
((pcr_rhpositive == 1) & is.na(spp_id)),
"Unknown",
spp_id)
)
remove_cso <- cso$c_label == "C-3295"
cso <- cso[!remove_cso,]
remove_df <- df$c_label == "C-3295"
df <- df[!remove_df,]
cso <- cso%>%
dplyr::mutate(substrate_moisture = ifelse(substrate_moisture <= 0, NA, substrate_moisture))
df <- df%>%
dplyr::mutate(substrate_moisture = ifelse(substrate_moisture <= 0, NA, substrate_moisture))
wi_info_sheet <- gs_key("1V6YHzblaDph01sFDI8YK_fP0H7sVebHQTXypGdiQIjI") %>%
gs_read() %>%
dplyr::select(strain, isotype, c_label, s_label)
cso <- cso %>%
dplyr::left_join(wi_info_sheet,
by = c("c_label", "s_label")) %>%
dplyr::select(isotype, strain, dplyr::everything())
df <- df %>% dplyr::left_join(wi_info_sheet %>%
dplyr::select(-s_label),
by = c('c_label')) %>%
dplyr::select(isotype, strain, dplyr::everything())
test2 <- cso %>% dplyr::filter(c_label %in% test$c_label)
View(test2)
test3 <- cso %>% dplyr::filter(c_label == "C-1154")
View(test3)
View(sc)
library(tidyverse)
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
args <- commandArgs(trailingOnly = TRUE)
load("data/popgenome/Genomewide_Fst_complete.rda")
fst_plot <- all_subsample_df_summarized %>%
ggplot() +
aes(x = position/1e6, y = Fst)+
geom_point(alpha = 0.5, color = "black", fill = "#999999", shape = 21)+
geom_smooth(span = 0.4, se = F, method = "loess")+
facet_grid(.~CHROM, scales = "free")+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
strip.text.x = element_blank(),
axis.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = "Hudson's Fst")
View(all_subsample_df_summarized)
library(tidyverse)
library(ggmap)
library(memoise)
library(lubridate)
library(cowplot)
library(pals)
library(grid)
library(gridExtra)
library(DT)
library(FSA)
library(scales)
library(ggrepel)
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
ancestry.colours <- c("A"="gold2", "B"="plum4","C"= "darkorange1",
"D"="lightskyblue2", "E"="firebrick","F"= "burlywood3", "G"="gray51",
"H"="springgreen4", "I"="lightpink2", "J"="deepskyblue4", "WHOLE_POPULATION"="black",
"K"="mediumpurple4","L"= "orange","M"= "maroon","N"= "yellow3","O"= "brown4",
"P"="yellow4", "Q"="sienna4", "R"="chocolate", "S"="gray19")
data1 <- data.table::fread("data/Supplemental Data 1.tsv")
hi_only_samples <- read.csv(file = "data/fulcrum/hawaii_isotypes.csv")
admix <- data.table::fread("data/ADMIXTURE/full/BEST_K/K11_Processed_Ancestry.tsv",header = T) %>%
dplyr::rename(isotype = samples) %>%
tidyr::gather(pop, frac_pop, - isotype) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(max_pop_frac = max(frac_pop)) %>%
dplyr::ungroup() %>%
dplyr::arrange(pop, max_pop_frac) %>%
dplyr::mutate(isotype = factor(isotype)) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(pop_assignment = ifelse(max_pop_frac == frac_pop, pop, NA)) %>%
dplyr::arrange(isotype, pop_assignment) %>%
tidyr::fill(pop_assignment) %>%
tidyr::spread(pop, frac_pop) %>%
dplyr::ungroup() %>%
dplyr::mutate(Hawaiian = ifelse(isotype %in% hi_only_samples$isotype, "TRUE", "FALSE"))
load("data/HAPLOTYPE/haplotype_plot_df.Rda")
hap_admix_df <- dplyr::left_join(plot_df, admix)
admix_sharing_all <- hap_admix_df  %>%
distinct(isotype, chromosome, .keep_all= TRUE) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(genome_swept_hap_length = sum(isotype_swept_haplotype_length),
genome_max_length = sum(max_swept_haplotype_length),
genome_frac_swept = genome_swept_hap_length/genome_max_length) %>%
dplyr::ungroup()
admix_sharing <- hap_admix_df  %>%
dplyr::filter(pop_assignment %in% c("C","E", "A", "H", "F")) %>%
distinct(isotype, chromosome, .keep_all= TRUE) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(genome_swept_hap_length = sum(isotype_swept_haplotype_length),
genome_max_length = sum(max_swept_haplotype_length),
genome_frac_swept = genome_swept_hap_length/genome_max_length) %>%
dplyr::ungroup()
Supp_Figure10 <- ggplot(admix_sharing) +
aes(x = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K")), y = max_haplotype_shared, fill = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"))) +
scale_fill_manual(values=c(ancestry.colours)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.25, size = 1.5, shape = ifelse(admix_sharing$Hawaiian == T, 21, 25)) +
facet_wrap(~chromosome, scales = "free") +
labs(y = "Fraction most common global haplotype", x = "Ancestral population") +
theme_bw() +
theme(legend.position="none") +
geom_text_repel(aes(label=ifelse(max_haplotype_shared > 0.3 & pop_assignment != "C" & Hawaiian == T,
as.character(isotype),'')),hjust=-2,vjust=.2, size = 2)
Supp_Figure10
pop_labels <- c("A" = "HI Low",
"C" = "C",
"E" = "HI Inv.",
"F" = "HI Div.",
"H" = "Vol.")
Supp_Figure10 <- ggplot(admix_sharing) +
aes(x = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K")), y = max_haplotype_shared, fill = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"))) +
scale_fill_manual(values=c(ancestry.colours)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.25, size = 1.5, shape = ifelse(admix_sharing$Hawaiian == T, 21, 25)) +
scale_x_discrete(pop_labels) +
facet_wrap(~chromosome, scales = "free") +
labs(y = "Fraction most common global haplotype", x = "Admixture population") +
theme_bw() +
theme(legend.position="none") +
geom_text_repel(aes(label=ifelse(max_haplotype_shared > 0.3 & pop_assignment != "C" & Hawaiian == T,
as.character(isotype),'')),hjust=-2,vjust=.2, size = 2)
Supp_Figure10
Supp_Figure10 <- ggplot(admix_sharing) +
aes(x = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K")), y = max_haplotype_shared, fill = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"))) +
scale_fill_manual(values=c(ancestry.colours)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.25, size = 1.5, shape = ifelse(admix_sharing$Hawaiian == T, 21, 25)) +
scale_x_discrete(labels = pop_labels) +
facet_wrap(~chromosome, scales = "free") +
labs(y = "Fraction most common global haplotype", x = "Admixture population") +
theme_bw() +
theme(legend.position="none") +
geom_text_repel(aes(label=ifelse(max_haplotype_shared > 0.3 & pop_assignment != "C" & Hawaiian == T,
as.character(isotype),'')),hjust=-2,vjust=.2, size = 2)
Supp_Figure10
Supp_Figure10 <- ggplot(admix_sharing) +
aes(x = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K")), y = max_haplotype_shared, fill = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"))) +
scale_fill_manual(values=c(ancestry.colours)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.25, size = 1.5, shape = ifelse(admix_sharing$Hawaiian == T, 21, 25)) +
scale_x_discrete(labels = pop_labels) +
facet_wrap(~chromosome, scales = "free") +
labs(y = "Fraction most common global haplotype", x = "") +
theme_bw() +
theme(legend.position="none",
axis.text.x = theme_text(angle = 60)) +
geom_text_repel(aes(label=ifelse(max_haplotype_shared > 0.3 & pop_assignment != "C" & Hawaiian == T,
as.character(isotype),'')),hjust=-2,vjust=.2, size = 2)
Supp_Figure10 <- ggplot(admix_sharing) +
aes(x = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K")), y = max_haplotype_shared, fill = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"))) +
scale_fill_manual(values=c(ancestry.colours)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.25, size = 1.5, shape = ifelse(admix_sharing$Hawaiian == T, 21, 25)) +
scale_x_discrete(labels = pop_labels) +
facet_wrap(~chromosome, scales = "free") +
labs(y = "Fraction most common global haplotype", x = "") +
theme_bw() +
theme(legend.position="none",
axis.text.x = element_text(angle = 60)) +
geom_text_repel(aes(label=ifelse(max_haplotype_shared > 0.3 & pop_assignment != "C" & Hawaiian == T,
as.character(isotype),'')),hjust=-2,vjust=.2, size = 2)
Supp_Figure10
Supp_Figure10 <- ggplot(admix_sharing) +
aes(x = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K")), y = max_haplotype_shared, fill = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"))) +
scale_fill_manual(values=c(ancestry.colours)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.25, size = 1.5, shape = ifelse(admix_sharing$Hawaiian == T, 21, 25)) +
scale_x_discrete(labels = pop_labels) +
facet_wrap(~chromosome, scales = "free") +
labs(y = "Fraction most common global haplotype", x = "") +
theme_bw() +
theme(legend.position="none",
axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text_repel(aes(label=ifelse(max_haplotype_shared > 0.3 & pop_assignment != "C" & Hawaiian == T,
as.character(isotype),'')),hjust=-2,vjust=.2, size = 2)
Supp_Figure10
Supp_Figure10 <- ggplot(admix_sharing) +
aes(x = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K")), y = max_haplotype_shared, fill = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"))) +
scale_fill_manual(values=c(ancestry.colours)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.25, size = 1.5, shape = ifelse(admix_sharing$Hawaiian == T, 21, 25)) +
scale_x_discrete(labels = pop_labels) +
facet_wrap(~chromosome, scales = "free") +
labs(y = "Fraction most common global haplotype", x = "") +
theme_bw() +
theme(legend.position="none",
axis.text.x = element_text(angle = 60, hjust = 0.5)) +
geom_text_repel(aes(label=ifelse(max_haplotype_shared > 0.3 & pop_assignment != "C" & Hawaiian == T,
as.character(isotype),'')),hjust=-2,vjust=.2, size = 2)
Supp_Figure10
Supp_Figure10 <- ggplot(admix_sharing) +
aes(x = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K")), y = max_haplotype_shared, fill = factor(pop_assignment, levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"))) +
scale_fill_manual(values=c(ancestry.colours)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.25, size = 1.5, shape = ifelse(admix_sharing$Hawaiian == T, 21, 25)) +
scale_x_discrete(labels = pop_labels) +
facet_wrap(~chromosome, scales = "free") +
labs(y = "Fraction most common global haplotype", x = "") +
theme_bw() +
theme(legend.position="none",
axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text_repel(aes(label=ifelse(max_haplotype_shared > 0.3 & pop_assignment != "C" & Hawaiian == T,
as.character(isotype),'')),hjust=-2,vjust=.2, size = 2)
Supp_Figure10
ggsave(paste("plots/Supplemental Figure 10.pdf"), width = 7.5, height = 7.5)
ggsave(paste("plots/Supplemental Figure 10.pdf"), width = 7.5, height = 7.5, useDingbats = F)
library(tidyverse)
library(ggmap)
library(memoise)
library(lubridate)
library(cowplot)
library(pals)
library(grid)
library(gridExtra)
library(DT)
library(FSA)
library(scales)
library(ggrepel)
library(rcompanion)
ancestry.colours <- c("A"="gold2", "B"="plum4","C"= "darkorange1",
"D"="lightskyblue2", "E"="firebrick","F"= "burlywood3", "G"="gray51",
"H"="springgreen4", "I"="lightpink2", "J"="deepskyblue4", "WHOLE_POPULATION"="black",
"K"="mediumpurple4","L"= "orange","M"= "maroon","N"= "yellow3","O"= "brown4",
"P"="yellow4", "Q"="sienna4", "R"="chocolate", "S"="gray19")
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
data1 <- data.table::fread("data/Supplemental Data 1.tsv")
hi_only_samples <- read.csv(file = "data/fulcrum/hawaii_isotypes.csv")
admix <- data.table::fread("data/ADMIXTURE/full/BEST_K/K11_Processed_Ancestry.tsv",header = T) %>%
dplyr::rename(isotype = samples) %>%
tidyr::gather(pop, frac_pop, - isotype) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(max_pop_frac = max(frac_pop)) %>%
dplyr::ungroup() %>%
dplyr::arrange(pop, max_pop_frac) %>%
dplyr::mutate(isotype = factor(isotype)) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(pop_assignment = ifelse(max_pop_frac == frac_pop, pop, NA)) %>%
dplyr::arrange(isotype, pop_assignment) %>%
tidyr::fill(pop_assignment) %>%
tidyr::spread(pop, frac_pop) %>%
dplyr::ungroup() %>%
dplyr::mutate(Hawaiian = ifelse(isotype %in% hi_only_samples$isotype, "TRUE", "FALSE"))
clim <- data.table::fread("data/NOAA_12mo_climate_variables.csv") %>%
dplyr::select(-V1) %>%
dplyr::rename(strain = isotype) %>%
dplyr::filter(strain %in% admix$isotype)
isotype_data <- data.table::fread("data/WI_strain_list.csv") %>%
dplyr::filter(isotype %in% c(as.character(admix$isotype))) %>%
dplyr::select(isotype, strain, latitude, longitude, isolation_date)
pop_clim <- full_join(admix, clim  %>% dplyr::rename(isotype = strain)) %>% # %>% dplyr::filter(station_distance <= 100)
tidyr::spread(trait, value)
Supp_Figure11 <- ggplot(pop_clim) +
aes(x = factor(pop_assignment, levels = c("B", "C", "D", "G", "I", "J", "K", "A", "E", "F", "H")), y = as.double(sd.temp), fill = pop_assignment) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = ifelse(pop_clim$Hawaiian == TRUE, 21, 24)) +
scale_fill_manual(values = ancestry.colours) +
labs(y = "12-month temperature SD (°C)", x = "Ancestral population", fill = "") +
theme_bw()
Supp_Figure11
pop_labels <- c("A" = "HI Low",
"B" = "B",
"C" = "C",
"D" = "D",
"E" = "HI Inv.",
"F" = "HI Div.",
"G" = "G",
"H" = "Vol.",
"I" = "I",
"J" = "J",
"K" = "K")
Supp_Figure11 <- ggplot(pop_clim) +
aes(x = factor(pop_assignment, levels = c("B", "C", "D", "G", "I", "J", "K", "A", "E", "F", "H")), y = as.double(sd.temp), fill = pop_assignment) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = ifelse(pop_clim$Hawaiian == TRUE, 21, 24)) +
scale_fill_manual(values = ancestry.colours) +
scale_x_discrete(labels = pop_labels) +
labs(y = "12-month temperature SD (°C)", x = "Ancestral population", fill = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
Supp_Figure11
Supp_Figure11 <- ggplot(pop_clim) +
aes(x = factor(pop_assignment, levels = c("B", "C", "D", "G", "I", "J", "K", "A", "E", "F", "H")), y = as.double(sd.temp), fill = pop_assignment) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = ifelse(pop_clim$Hawaiian == TRUE, 21, 24)) +
scale_fill_manual(values = ancestry.colours) +
scale_x_discrete(labels = pop_labels) +
labs(y = "12-month temperature SD (°C)", x = "", fill = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
Supp_Figure11
Supp_Figure11 <- ggplot(pop_clim) +
aes(x = factor(pop_assignment, levels = c("B", "C", "D", "G", "I", "J", "K", "A", "E", "F", "H")), y = as.double(sd.temp), fill = pop_assignment) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, shape = ifelse(pop_clim$Hawaiian == TRUE, 21, 24)) +
scale_fill_manual(values = ancestry.colours) +
scale_x_discrete(labels = pop_labels) +
labs(y = "12-month temperature SD (°C)", x = "", fill = "") +
theme_bw() +
theme(legend.position="none",
axis.text.x = element_text(angle = 60, hjust = 1))
Supp_Figure11
ggsave('plots/Supplemental Figure 11.pdf', width = 7.5, height = 5, useDingbats=FALSE)
library(janitor)
library(tidyverse)
library(rcompanion)
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
data1 <- data.table::fread("data/Supplemental Data 1.tsv")
Supp_table1 <- data1 %>%
dplyr::mutate(plot_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse((worms_on_sample == "Yes" & is.na(pcr_positive) | (pcr_positive == 1 & species_id == "Unknown")), "Not genotyped",
ifelse(worms_on_sample == "Yes" & pcr_positive == 0, "PCR -", species_id))))) %>%
dplyr::distinct(c_label, plot_type, .keep_all = T) %>%
dplyr::mutate(plot_type = forcats::as_factor(plot_type),
plot_type = forcats::fct_relevel(plot_type,
"C. elegans",
"C. oiwi",
"C. tropicalis",
"C. kamaaina",
"C. briggsae",
"Panagrolaimus sp.",
"Oscheius sp.",
"Teratorhabditis sp.",
"Rhabditis terricola",
"Choriorhabditis sp.",
"Mesorhabditis sp.",
"Chabertia ovina",
"Heterhabditis zealandica",
"PCR -",
"Not genotyped",
"Tracks only",
"No Nematode")) %>%
dplyr::arrange(desc(plot_type)) %>%
dplyr::rename(collection_category = plot_type) %>%
dplyr::group_by(collection_category, island) %>%
dplyr::summarize(worm_isolates=as.integer(n())) %>%
tidyr::spread(island, worm_isolates, fill=0) %>%
janitor::adorn_totals('row') %>%
janitor::adorn_totals('col') %>%
readr::write_tsv("data/elife_files/supp-table1-data1.csv")
Supp_table1 <- data1 %>%
dplyr::mutate(plot_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse((worms_on_sample == "Yes" & is.na(pcr_positive) | (pcr_positive == 1 & species_id == "Unknown")), "Not genotyped",
ifelse(worms_on_sample == "Yes" & pcr_positive == 0, "PCR -", species_id))))) %>%
dplyr::distinct(c_label, plot_type, .keep_all = T) %>%
dplyr::mutate(plot_type = forcats::as_factor(plot_type),
plot_type = forcats::fct_relevel(plot_type,
"C. elegans",
"C. oiwi",
"C. tropicalis",
"C. kamaaina",
"C. briggsae",
"Panagrolaimus sp.",
"Oscheius sp.",
"Teratorhabditis sp.",
"Rhabditis terricola",
"Choriorhabditis sp.",
"Mesorhabditis sp.",
"Chabertia ovina",
"Heterhabditis zealandica",
"PCR -",
"Not genotyped",
"Tracks only",
"No Nematode")) %>%
dplyr::arrange(desc(plot_type)) %>%
dplyr::rename(collection_category = plot_type) %>%
dplyr::group_by(collection_category, island) %>%
dplyr::summarize(worm_isolates=as.integer(n())) %>%
tidyr::spread(island, worm_isolates, fill=0) %>%
janitor::adorn_totals('row') %>%
janitor::adorn_totals('col') %>%
readr::write_csv("data/elife_files/supp-table1-data1.csv")
Suppl_table_X <- data1 %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(pcr_positive), "Not genotyped",
ifelse(worms_on_sample == "Yes" & pcr_positive == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::mutate(collection_type = forcats::as_factor(collection_type),
collection_type = forcats::fct_relevel(collection_type,
"C. elegans",
"C. oiwi",
"C. tropicalis",
"C. briggsae",
"Other PCR +",
"PCR -",
"Not genotyped",
"Tracks only",
"No Nematode")) %>%
dplyr::distinct(s_label, .keep_all = T) %>%
dplyr::filter(!is.na(s_label)) %>%
dplyr::select(species_id, collection_type, island) %>%
#group_by(collection_type) %>%
#dplyr::mutate(count = n()) %>%
#dplyr::distinct(count, .keep_all = T) %>%
#dplyr::select(collection_type, count) %>%
dplyr::arrange(desc(collection_type)) %>%
dplyr::rename(`Isolation category` = collection_type) %>%
dplyr::group_by(`Isolation category`, island) %>%
dplyr::summarize(count=as.integer(n())) %>%
tidyr::spread(island, count, fill=0) %>%
janitor::adorn_totals('row') %>%
janitor::adorn_totals('col') %>% readr::write_csv("data/elife_files/supp-tableX.csv")
library(tidyverse)
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
args <- commandArgs(trailingOnly = TRUE)
load("data/popgenome/Genomewide_Fst_complete.rda")
fst_plot <- all_subsample_df_summarized %>%
ggplot() +
aes(x = position/1e6, y = Fst)+
geom_point(alpha = 0.5, color = "black", fill = "#999999", shape = 21)+
geom_smooth(span = 0.4, se = F, method = "loess")+
facet_grid(.~CHROM, scales = "free")+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
strip.text.x = element_blank(),
axis.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = "Hudson's Fst")
pi_plot <- all_subsample_df_summarized %>%
dplyr::select(CHROM, position, Diversity_a, Diversity_b) %>%
tidyr::gather(Pi, value, -CHROM, -position) %>%
ggplot() +
aes(x = position/1e6, y = value,
color = factor(Pi, levels = c("Diversity_b", "Diversity_a"), labels = c("World", "Hawaii")),
fill = factor(Pi, levels = c("Diversity_b", "Diversity_a"), labels = c("World", "Hawaii")))+
geom_point(alpha = 0.5, shape = 21, color = "black")+
facet_grid(.~CHROM, scales = "free")+
geom_smooth(span = 0.4, se = F, method = "loess")+
scale_color_manual(values = c("hotpink3", "cadetblue3"))+
scale_fill_manual(values = c("hotpink3", "cadetblue3"))+
theme_bw()+
theme(legend.box = NULL,
strip.background = element_blank(),
legend.background = element_rect(colour = NA),
legend.key = element_blank(),
legend.position = "top",
axis.title.x = element_blank(),
axis.text.x = element_blank())+
labs(x = "Genomic Position (Mb)", y = expression(pi), color = "Population", fill = "Population")
View(all_subsample_df_summarized)
?neutrality.stat
?PopGenome::neutrality.stats
?PopGenome::diversity.stats
require(PopGenome)
require(data.table)
require(tidyverse)
require(WhopGenome)
require(bigmemory)
install.packages("WhopGenome")
install.packages("bigmemory")
require(WhopGenome)
require(bigmemory)
chr1 <- c(1,15072434)
chr2 <- c(1,15279421)
require(PopGenome)
require(data.table)
require(tidyverse)
require(WhopGenome)
require(bigmemory)
chr1 <- c(1,15072434)
chr2 <- c(1,15279421)
chr3 <- c(1,13783801)
chr4 <- c(1,17493829)
chr5 <- c(1,20924180)
chr6 <- c(1,17718942)
chr.lengths <- list(chr1,chr2,chr3,chr4,chr5,chr6)
chroms <- c("I","II","III","IV","V","X")
ANALYSIS_CHROM <- "${CHROM}"
